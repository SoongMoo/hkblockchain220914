1.  사원의 성, 급여 , 입사일, 직무를 출력할 대 직무명도 같이 출력하시오.
select last_name , salary, hire_date, employees.job_id, job_title
from employees, jobs
where employees.job_id = jobs.job_id;

2. 부서 테이블에서 90인 부서정보를 출력하시오.
select * from departments where departments.department_id = 90;

3. 90인 부서의 직원을 구하시오,.
select * from employees where department_id = 90;

4. 100번 사원 정보를 출력하시오.
select * from employees where employee_id = 100;

5. 2 ~ 4번을 한번에 출력하세요.
select employee_id, last_name, first_name, salary, job_id,     
       d.department_id, location_id, department_name
from employees e, departments d  
where e.department_id= d.department_id;
-----
select employee_id, last_name, first_name, salary, job_id,     
       d.department_id, location_id, department_name
from employees e join departments d  
on e.department_id= d.department_id;

6. 직원번호, 성, 이름, 급여, 직무, 부서번호, 지역번호, 부서명을 출력 
select employee_id, last_name, first_name, salary, job_id,     
       d.department_id, location_id, department_name
from employees e, departments d  
where e.department_id= d.department_id;
-----
select employee_id, last_name, first_name, salary, job_id,     
       d.department_id, location_id, department_name
from employees e join departments d  
on e.department_id= d.department_id;

7. 직원번호 .성, 이름 급여 부서번호, 부서명을 100사원만 출력하시오.
select last_name, first_name, salary, e.department_id, department_name
from employees e join departments d
on e.department_id = d.department_id -- join조인 조건
where employee_id = 100;


8. 직원 번호, 성, 이름 , 직무, 직무명을 출력하세요.
select employee_id, last_name, firat_name, job_id, job_title
from employees e, jobs j
where e.job_id = j.job_id; -- 일반적으로 join조건은 primary key = foreign key
-- ansi - join 
select employee_id, last_name, firat_name, job_id, job_title
from employees e join jobs j
on e.job_id = j.job_id;
-- natual join
select employee_id, last_name, first_name, job_id, job_title
from employees natural join jobs; 

9. 부서장이 상사인 직원을 구하시오.
  직원번호, 성, 급여 입사일, 부서번호, 부서장번호를 출력하시오.
-- t-sql join
select employee_id, last_name, salary, hire_date, 
       d.department_id, d.manager_id
from employees e, departments d
where e.department_id = d.department_id and d.manager_id = e.manager_id;
-- ansi-join 
select employee_id, last_name, salary, hire_date, 
       d.department_id, d.manager_id
from employees e join departments d
on e.department_id = d.department_id and d.manager_id = e.manager_id;

--natural join
select employee_id, last_name, salary, hire_date, 
        department_id, manager_id
from employees natural join departments;
-- using절 사용
select employee_id, last_name, salary, hire_date, 
        department_id, manager_id
from employees join departments  using(department_id, manager_id);

10. 성 이름 직원번호 , 전화번호 , 급여 부서번호, 부서명을 출력
select last_name, first_name, employee_id, phone_number, salary,
       d.department_id , department_name
from employees e join departments d
on e.department_id = d.department_id;
--- using절 사용
select last_name, first_name, employee_id, phone_number, salary,
       department_id , department_name
from employees join departments using(department_id);

11. 각 부서의 부서의 정보와 부서장의 이름을 출력 하시오
select d.department_id, department_name, location_id, d.manager_id ,
       employee_id, first_name
from departments d, employees e
where d.manager_id = e.employee_id;

12. 직원 번호, 직무 번호 , 직무내용
select employee_id, j.job_id, job_title
from employees e, jobs j
where e.job_id = j.job_id;

13. 직원번호, 부서번호, 부서명
select employee_id, e.department_id, department_name
from employees e, departments d
where e.department_id = d.department_id;

14. 각 직원의 직원번호, 직무번호, 직무 내용, 부서번호, 부서명
-- t-sql
select employee_id, e.job_id, job_title, e.department_id, department_name
from employees e, jobs j, departments d
where e.job_id = j.job_id and e.department_id = d.department_id;
-- ansi-join
select employee_id, e.job_id, job_title, e.department_id, department_name
from employees e join jobs j
on e.job_id = j.job_id join  departments d 
on e.department_id = d.department_id;
----NATURAL
select employee_id, job_id, job_title, department_id, department_name
from employees NATURAL join jobs join departments using (department_id);

15. 부서장의 직무내용을 출력하시오. 부서장 번호, 직무내용,
select  d.manager_id, job_title
from jobs j,  employees e ,departments d
where e.job_id = j.job_id and e.employee_id = d.manager_id
and e.department_id = d.department_id;

16. 부서가 없는 직원도 같이 출력
select first_name, last_name, salary, e.department_id, 
       d.department_id, department_name
from employees e left outer join departments d
on e.department_id = d.department_id;
select first_name, last_name, salary, e.department_id, 
       d.department_id, department_name
from employees e , departments d
--where e.department_id = d.department_id(+);
where d.department_id(+) = e.department_id ;

----

select first_name, last_name, salary, e.department_id, 
       d.department_id, department_name
from departments d right outer join employees e
on e.department_id = d.department_id;

17. 직원이 없는 부서 를 출력
select first_name, last_name, salary, e.department_id, 
       d.department_id, department_name
from departments d left outer join employees e
on e.department_id = d.department_id;

select first_name, last_name, salary, e.department_id, 
       d.department_id, department_name
from employees e right outer join departments d 
on e.department_id = d.department_id;

select first_name, last_name, salary, e.department_id, 
       d.department_id, department_name
from employees e , departments d 
where e.department_id(+) = d.department_id;

18. 부서가 없는 직원과 직원이 없는 부서까지 모두 출력
select first_name, last_name, salary, e.department_id, 
       d.department_id, department_name
from employees e full outer join departments d 
on e.department_id = d.department_id;
