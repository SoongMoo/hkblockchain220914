<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
		"-//mybatis.org//DTD Mapper 3.0//EN" 
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hkShoppungMall.repository.PuchaseRepository">
	<resultMap type="cartGoodsDTO" id="GoodsCartResultMap">
		<result column="total_Price" jdbcType="BIGINT" property="totalPrice"/>
		<association property="goodsDTO" javaType="GoodsDTO">
			<id column="GOODS_NUM" jdbcType="VARCHAR" property="goodsNum"/>
			<result column="GOODS_MAIN" jdbcType="VARCHAR" property="goodsMain"/>
			<result column="GOODS_NAME" jdbcType="VARCHAR" property="goodsName"/>
			<result column="DELIVERY_COST" jdbcType="VARCHAR" property="deliveryCost"/>
		</association>
		<association property="cartDTO" javaType="cartDTO" >
			<id column="GOODS_NUM" jdbcType="VARCHAR" property="goodsNum"/>
			<result column="CART_QTY" jdbcType="BIGINT" property="cartQty"/>
		</association>
</resultMap>
<select id="goodsOrder" parameterType="cartDTO" resultMap="GoodsCartResultMap">
	select GOODS_MAIN, g.GOODS_NUM, GOODS_NAME, DELIVERY_COST,
			   CART_QTY, CART_QTY * GOODS_PRICE total_Price
	from goods g, cart c
	where g.GOODS_NUM = c.GOODS_NUM and MEMBER_NUM =  #{memberNum} 
	and c.GOODS_NUM in 
	<foreach collection="goodsNums" item="goodsNum" close=")" open="(" index="index" separator=",">
		#{goodsNum}
	</foreach>
</select>
<select id="selectNum" resultType="integer">
select nvl(max(substr(PURCHASE_NUM,9)), 100000)+ 1
from purchase
where substr(PURCHASE_NUM,1, 8) = to_char(sysdate,'yyyymmdd')
</select>
<insert id="purchaseInsert" parameterType="purchaseDTO" >
insert into purchase(PURCHASE_NUM, PURCHASE_DATE, TOTAL_PRICE, DELIVERY_ADDR, DELIVERY_PHONE
					,MESSAGE,  PURCHASE_STATUS,  MEMBER_NUM,  RECIEVE_NAME )
              values(#{purchaseNum},sysdate,    #{totalPrice},#{deliveryAddr},#{deliveryPhone},
              		#{message},#{purchaseStatus},#{memberNum},#{recieveName})
</insert>
<insert id="purchaseListInsert" parameterType="purchaseListDTO">
insert into purchase_list(PURCHASE_NUM, GOODS_NUM  ,PURCHASE_QTY,  PURCHASE_PRICE  )
select                  #{purchaseNum}, g.GOODS_NUM, CART_QTY   ,  CART_QTY * goods_Price
from cart c , goods g
where c.goods_num = g.goods_num and c.goods_num = #{goodsNum}
                                and c.member_num = #{memberNum}
</insert>
<resultMap type="paymentPurchaseGoodsDTO" id="paymentPurchaseGoodsMap">
<association property="paymentDTO" javaType="paymentDTO">
	<result column="CONFIRM_NUMBER" jdbcType="VARCHAR" property="confirmNumber"/>
</association>
<association property="purchaseDTO" javaType="purchaseDTO">
	<id column="PURCHASE_NUM" jdbcType="VARCHAR" property="purchaseNum"/>
	<result column="PURCHASE_DATE" jdbcType="DATE" property="purchaseDate"/>
	<result column="TOTAL_PRICE" jdbcType="BIGINT" property="totalPrice"/>
	<result column="PURCHASE_STATUS" jdbcType="VARCHAR" property="purchaseStatus"/>
</association>
<association property="deliveryDTO" javaType="deliveryDTO" >
	<result column="DELIVERY_NUMBER" jdbcType="VARCHAR" property="deliveryNumber"/>
	<result column="DELIVERY_COMPANY" jdbcType="VARCHAR" property="deliveryCompany"/>
</association>
<collection property="goodsDTOs" ofType="goodsDTO">
	<id column="goods_Num" jdbcType="VARCHAR" property="goodsNum"/>
	<result column="goods_Name" jdbcType="VARCHAR" property="goodsName"/>	
	<result column="goods_main" jdbcType="VARCHAR" property="goodsMain"/>	
</collection>
</resultMap>
<select  id="purchaseList" parameterType="string" resultMap="paymentPurchaseGoodsMap">
select CONFIRM_NUMBER, pu.PURCHASE_NUM, PURCHASE_DATE, TOTAL_PRICE, PURCHASE_STATUS,
       DELIVERY_NUMBER, DELIVERY_COMPANY,
       g.goods_Num, goods_Name, goods_main
from payment pa right outer join purchase pu 
on pa.PURCHASE_num = pu.PURCHASE_num  left outer join  Delivery d
on pa.PURCHASE_num = d.PURCHASE_num join purchase_list pl
on pu.PURCHASE_num = pl.purchase_num join goods g
on pl.goods_num = g.goods_num
where pu.member_num = #{memberNum}
order by pu.purchase_num desc
</select>
<insert id="payment" parameterType="paymentDTO">
	insert into payment(PURCHASE_NUM,PAYMENT_KIND, PAYMENT_PRICE,PAYMENT_DATE, 
			CONFIRM_NUMBER, CARD_NUMBER )
	values(#{purchaseNum},#{paymentKind},#{paymentPrice},sysdate,
			#{confirmNumber},#{cardNumber})
</insert>
<update id="purchaseStatus" parameterType="string">
	update purchase
	set purchase_Status = '결제완료' 
	where purchase_num = #{purchaseNum}
</update>
<delete id="paymentDelete" parameterType="string">
	delete from payment
	where purchase_num = #{purchaseNum}
</delete>
<update id="purchaseStatusBack" parameterType="string">
	update purchase
	set purchase_Status = '결제대기중' 
	where purchase_num = #{purchaseNum}
</update>
</mapper>